{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"derived_schema: a data model for life-sciences data.","text":"<p>The Biolink Model is a high-level, open-source data model designed to standardize types and relationships in biological knowledge graphs, covering entities like genes, diseases, chemical substances, organisms, genomics, phenotypes, and more.  Biolink Model can be used to formalize the relationships between data structures in translational science. It incorporates object-oriented classification and graph-oriented features. The core of the model is a set of hierarchical, interconnected classes (or categories) and relationships between them (or predicates). The model provides class and edge attributes and associations that guide how entities should relate to one another. The goal of the Biolink Model is to provide a consistent framework for representing biological knowledge across various databases and formats.  For more information, see: understanding the model</p>"},{"location":"#classes-visualization","title":"Classes (Visualization)","text":"Class Description Employee A person employed by an organization. Person A human being."},{"location":"#class-properties","title":"Class Properties","text":"<p>| Property | Description |</p>"},{"location":"#predicates-visualization","title":"Predicates (Visualization)","text":"<p>| Property | Description |</p>"},{"location":"#qualifiers-visualization","title":"Qualifiers (Visualization)","text":"<p>| Property | Description |</p>"},{"location":"#associations","title":"Associations","text":"<p>| Association | Description |</p>"},{"location":"#association-properties","title":"Association Properties","text":"<p>| Property | Description |</p>"},{"location":"#enumerations","title":"Enumerations","text":"Enumeration Description GenderEnum None"},{"location":"#subsets","title":"Subsets","text":"Subset Description"},{"location":"#citing-biolink-model","title":"Citing Biolink Model","text":"<p> Unni DR, Moxon SAT, Bada M, Brush M, Bruskiewich R, Caufield JH, Clemons PA, Dancik V, Dumontier M, Fecho K, Glusman G, Hadlock JJ, Harris NL, Joshi A, Putman T, Qin G, Ramsey SA, Shefchek KA, Solbrig H, Soman K, Thessen AE, Haendel MA, Bizon C, Mungall CJ, The Biomedical Data Translator Consortium (2022). Biolink Model: A universal schema for knowledge graphs in clinical, biomedical, and translational science. Clin Transl Sci. Wiley; 2022 Jun 6; https://onlinelibrary.wiley.com/doi/10.1111/cts.13302 </p>"},{"location":"Boolean/","title":"Type:  Boolean","text":"<p>A binary (true or false) value</p> <ul> <li> <p>base: Bool</p> </li> <li> <p>uri: xsd:boolean</p> </li> <li> <p>repr: bool</p> </li> </ul>"},{"location":"Curie/","title":"Type:  Curie","text":"<p>a compact URI</p> <ul> <li> <p>base: Curie</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Date/","title":"Type:  Date","text":"<p>a date (year, month and day) in an idealized calendar</p> <ul> <li> <p>base: XSDDate</p> </li> <li> <p>uri: xsd:date</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"DateOrDatetime/","title":"Type:  DateOrDatetime","text":"<p>Either a date or a datetime</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: linkml:DateOrDatetime</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Datetime/","title":"Type:  Datetime","text":"<p>The combination of a date and time</p> <ul> <li> <p>base: XSDDateTime</p> </li> <li> <p>uri: xsd:dateTime</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Decimal/","title":"Type:  Decimal","text":"<p>A real number with arbitrary precision that conforms to the xsd:decimal specification</p> <ul> <li> <p>base: Decimal</p> </li> <li> <p>uri: xsd:decimal</p> </li> </ul>"},{"location":"Double/","title":"Type:  Double","text":"<p>A real number that conforms to the xsd:double specification</p> <ul> <li> <p>base: float</p> </li> <li> <p>uri: xsd:double</p> </li> </ul>"},{"location":"Employee/","title":"Class: Employee","text":"Description: A person employed by an organization. <pre><code> classDiagram\n    class Employee\n      Person &lt;|-- Employee\n\n      Employee : department\n\n      Employee : employee_id\n\n      Employee : gender\n\n          Employee --|&gt; GenderEnum : gender\n\n      Employee : id\n\n      Employee : name\n\n\n</code></pre>"},{"location":"Employee/#inheritance","title":"Inheritance","text":"<ul> <li>Person<ul> <li>Employee</li> </ul> </li> </ul>"},{"location":"Employee/#slots","title":"Slots","text":"Name Cardinality and Range Inheritance Examples employee_id:   None  0..1  String direct department:   None  0..1  String direct id:   None  1  String Person name:   None  1  String Person gender:   None  0..1  GenderEnum Person"},{"location":"Employee/#linkml-source","title":"LinkML Source","text":"<pre><code>name: Employee\ndescription: A person employed by an organization.\nfrom_schema: https://example.org/derived_schema\nis_a: Person\nattributes:\n  employee_id:\n    name: employee_id\n    from_schema: https://example.org/derived_schema\n    domain_of:\n    - Employee\n    range: string\n  department:\n    name: department\n    from_schema: https://example.org/derived_schema\n    domain_of:\n    - Employee\n    range: string\n\n</code></pre>"},{"location":"Float/","title":"Type:  Float","text":"<p>A real number that conforms to the xsd:float specification</p> <ul> <li> <p>base: float</p> </li> <li> <p>uri: xsd:float</p> </li> </ul>"},{"location":"GenderEnum/","title":"Enum:  GenderEnum","text":""},{"location":"GenderEnum/#permissible-values","title":"Permissible Values","text":"Value Meaning Description male None None female None None other None None"},{"location":"GenderEnum/#slots-constrained-by-this-enum","title":"Slots constrained by this enum","text":"Name gender"},{"location":"GenderEnum/#linkml-source","title":"LinkML Source","text":"<pre><code>name: GenderEnum\nfrom_schema: https://example.org/derived_schema\npermissible_values:\n  male:\n    text: male\n  female:\n    text: female\n  other:\n    text: other\n\n</code></pre>"},{"location":"Integer/","title":"Type:  Integer","text":"<p>An integer</p> <ul> <li> <p>base: int</p> </li> <li> <p>uri: xsd:integer</p> </li> </ul>"},{"location":"Jsonpath/","title":"Type:  Jsonpath","text":"<p>A string encoding a JSON Path. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded in tree form.</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Jsonpointer/","title":"Type:  Jsonpointer","text":"<p>A string encoding a JSON Pointer. The value of the string MUST conform to JSON Point syntax and SHOULD dereference to a valid object within the current instance document when encoded in tree form.</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Ncname/","title":"Type:  Ncname","text":"<p>Prefix part of CURIE</p> <ul> <li> <p>base: NCName</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Nodeidentifier/","title":"Type:  Nodeidentifier","text":"<p>A URI, CURIE or BNODE that represents a node in a model.</p> <ul> <li> <p>base: NodeIdentifier</p> </li> <li> <p>uri: shex:nonLiteral</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Objectidentifier/","title":"Type:  Objectidentifier","text":"<p>A URI or CURIE that represents an object in the model.</p> <ul> <li> <p>base: ElementIdentifier</p> </li> <li> <p>uri: shex:iri</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Person/","title":"Class: Person","text":"Description: A human being. <pre><code> classDiagram\n    class Person\n      Person &lt;|-- Employee\n\n      Person : gender\n\n          Person --|&gt; GenderEnum : gender\n\n      Person : id\n\n      Person : name\n\n\n</code></pre>"},{"location":"Person/#inheritance","title":"Inheritance","text":"<ul> <li>Person<ul> <li>Employee</li> </ul> </li> </ul>"},{"location":"Person/#slots","title":"Slots","text":"Name Cardinality and Range Inheritance Examples id:   None  1  String direct name:   None  1  String direct gender:   None  0..1  GenderEnum direct"},{"location":"Person/#linkml-source","title":"LinkML Source","text":"<pre><code>name: Person\ndescription: A human being.\nfrom_schema: https://example.org/derived_schema\nattributes:\n  id:\n    name: id\n    from_schema: https://example.org/base_schema\n    identifier: true\n    domain_of:\n    - Person\n    range: string\n    required: true\n  name:\n    name: name\n    from_schema: https://example.org/base_schema\n    domain_of:\n    - Person\n    required: true\n  gender:\n    name: gender\n    from_schema: https://example.org/base_schema\n    domain_of:\n    - Person\n    range: GenderEnum\n\n</code></pre>"},{"location":"Sparqlpath/","title":"Type:  Sparqlpath","text":"<p>A string encoding a SPARQL Property Path. The value of the string MUST conform to SPARQL syntax and SHOULD dereference to zero or more valid objects within the current instance document when encoded as RDF.</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"String/","title":"Type:  String","text":"<p>A character string</p> <ul> <li> <p>base: str</p> </li> <li> <p>uri: xsd:string</p> </li> </ul>"},{"location":"Time/","title":"Type:  Time","text":"<p>A time object represents a (local) time of day, independent of any particular day</p> <ul> <li> <p>base: XSDTime</p> </li> <li> <p>uri: xsd:time</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Uri/","title":"Type:  Uri","text":"<p>a complete URI</p> <ul> <li> <p>base: URI</p> </li> <li> <p>uri: xsd:anyURI</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"Uriorcurie/","title":"Type:  Uriorcurie","text":"<p>a URI or a CURIE</p> <ul> <li> <p>base: URIorCURIE</p> </li> <li> <p>uri: xsd:anyURI</p> </li> <li> <p>repr: str</p> </li> </ul>"},{"location":"department/","title":"Slot: department","text":"<p>Range: String </p>"},{"location":"department/#linkml-source","title":"LinkML Source","text":"<pre><code>name: department\nfrom_schema: https://example.org/derived_schema\nalias: department\nowner: Employee\ndomain_of:\n- Employee\nrange: string\n\n</code></pre>"},{"location":"derived_schema/","title":"derived_schema","text":"<p>None</p>"},{"location":"employee_id/","title":"Slot: employee_id","text":"<p>Range: String </p>"},{"location":"employee_id/#linkml-source","title":"LinkML Source","text":"<pre><code>name: employee_id\nfrom_schema: https://example.org/derived_schema\nalias: employee_id\nowner: Employee\ndomain_of:\n- Employee\nrange: string\n\n</code></pre>"},{"location":"gender/","title":"Slot: gender","text":"<p>Range: GenderEnum </p>"},{"location":"gender/#linkml-source","title":"LinkML Source","text":"<pre><code>name: gender\nfrom_schema: https://example.org/derived_schema\nalias: gender\nowner: Person\ndomain_of:\n- Person\nrange: GenderEnum\n\n</code></pre>"},{"location":"id/","title":"Slot: id","text":"Required: True <p>Range: String </p>"},{"location":"id/#linkml-source","title":"LinkML Source","text":"<pre><code>name: id\nfrom_schema: https://example.org/derived_schema\nidentifier: true\nalias: id\nowner: Person\ndomain_of:\n- Person\nrange: string\nrequired: true\n\n</code></pre>"},{"location":"name/","title":"Slot: name","text":"Required: True <p>Range: String </p>"},{"location":"name/#linkml-source","title":"LinkML Source","text":"<pre><code>name: name\nfrom_schema: https://example.org/derived_schema\nalias: name\nowner: Person\ndomain_of:\n- Person\nrange: string\nrequired: true\n\n</code></pre>"}]}